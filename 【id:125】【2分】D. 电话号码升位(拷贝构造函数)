#include <iostream>
#include <cstring>
using namespace std;

class CTelNumber {
private:
    char* ch;
public:
    CTelNumber(char* c) {
        ch = new char[strlen(c) + 1];
        strcpy(ch, c);
    }
    
    CTelNumber(const CTelNumber& obj) {
        ch = new char[strlen(obj.ch) + 2];  // 8位号码+结束符
        strcpy(ch + 1, obj.ch);  // 先复制原字符串
        
        // 然后修改首字符
        if (obj.ch[0] == '2' || obj.ch[0] == '3' || obj.ch[0] == '4') {
            ch[0] = '8';
        } else if (obj.ch[0] == '5' || obj.ch[0] == '6' || obj.ch[0] == '7' || obj.ch[0] == '8') {
            ch[0] = '2';
        }
    }
    
    bool isValid() const {
        // 先检查长度
        if (strlen(ch) != 7) {
            return false;
        }
        
        // 再检查首字符
        if (ch[0] != '2' && ch[0] != '3' && ch[0] != '4' && 
            ch[0] != '5' && ch[0] != '6' && ch[0] != '7' && ch[0] != '8') {
            return false;
        }
        
        // 最后检查所有字符是否都是数字
        for (int i = 0; i < strlen(ch); i++) {
            if (ch[i] < '0' || ch[i] > '9') {
                return false;
            }
        }
        
        return true;
    }
    
    ~CTelNumber() {
        delete[] ch;
    }
    
    void Print() const {
        cout << ch << endl;
    }
};

int main() {
    int t;
    cin >> t;
    while (t--) {
        char str[8];
        cin >> str;
        
        CTelNumber original(str);
        
        if (original.isValid()) {
            CTelNumber upgraded(original);
            upgraded.Print();
        } else {
            cout << "Illegal phone number" << endl;
        }
    }
    return 0;
}
