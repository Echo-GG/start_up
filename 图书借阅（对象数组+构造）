#include <iostream>
#include <string>
using namespace std;

class CBook {
private:
    string code; 
    string name; 
    int total; 
    int borrowable; 

public:
	CBook()
	{
		
	}
    CBook(string s1, string s2, int n1, int n2) : code(s1), name(s2), total(n1), borrowable(n2) {}

    string borrow() 
	{
        if (borrowable > 0) 
		{
            borrowable--;
            return code;
        } 
		else 
		{
            return "";
        }
    }

    string getname() 
	{
        return name;
    }

    string getcode() 
	{  	
		return code;
    }

    int gettotal() 
	{
        return total;
    }

    int getborrowable() 
	{
        return borrowable;
    }

    void Print() 
	{
        if (borrowable == 0) 
		{
            cout << name << " 该书已全部借出" << endl;
        } 
		else 
		{
            cout << name << " 索取号: " << code << endl;
        }
    }
};

int main() 
{
    int n;
    cin >> n;
    CBook *books = new CBook[n]; 

    for (int i = 0; i < n; i++) 
	{
        string code, name;
        int total, borrowable;
        cin >> code >> name >> total >> borrowable;
        books[i] = CBook(code, name, total, borrowable);
    }
    int m; 
    cin >> m;

    for (int i = 0; i < m; i++) 
	{
        string bookName;
        cin >> bookName;

        bool found = false;
        for (int j = 0; j < n; j++) 
		{
            if (books[j].getname() == bookName) 
			{
                string result = books[j].borrow();
                if (result.empty()) 
				{
                    books[j].Print(); 
                } 
				else 
				{
                    cout << bookName << " 索取号: " << result << endl; 
                }
                found = true;
                break;
            }
        }
        if (!found) 
		{
            cout << bookName << " 该书不存在" << endl;
        }
    }

    cout << endl;

    for (int i = 0; i < n; i++) 
	{
        cout << books[i].getcode() << " " << books[i].getname() << " " << books[i].gettotal() << " " << books[i].getborrowable() << endl;
    }

    int totalBorrowed = 0;
    int totalLeft = 0;
    for (int i = 0; i < n; i++) 
	{
        totalBorrowed += books[i].gettotal() - books[i].getborrowable();
        totalLeft += books[i].getborrowable();
    }

    cout << "借出图书: " << totalBorrowed << "本  剩余馆藏图书: " << totalLeft << "本" << endl;

    delete[] books; 
    return 0;
}
